#include <LiquidCrystal.h>
#include <PinChangeInterrupt.h>
#include <Adafruit_MPU6050.h>
#include <Adafruit_Sensor.h>
#include <Wire.h>

Adafruit_MPU6050 mpu;

const int rs = 8, en = 9, d4 = 4, d5 = 5, d6 = 6, d7 = 7;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

// Motor control pins
int motorEnA = 11;    // Enable pin for motor A
int motorIn1 = 2;    // Motor A direction control
int motorIn2 = 13;    // Motor A direction control
int motorEnB = 3;   // Enable pin for motor B
int motorIn3 = 10;   // Motor B direction control
int motorIn4 = 12;   // Motor B direction control


int irL = A1, irR = A0;

volatile int leftEncoderCount;

const int encoderL = A2;

const float wheelCircumference = 21.031;
const int pulsesPerRevolution = 20;

Adafruit_MPU6050 mpu;
float roll = 0;

int i = 1;

float gyroZ, previousGyroZ;
unsigned long previousTime;
float angleZ = 0; // Total angle of rotation in degrees
const float dt = 0.01; // Time step in seconds (10ms)

float distance = 0;

float time = 0;

void leftEncoderInterrupt() {
  leftEncoderCount++;
}

void setup() {
  lcd.begin(16, 2);
  Serial.begin(9600);

  pinMode(motorIn1, OUTPUT);
  pinMode(motorIn2, OUTPUT);
  pinMode(motorIn3, OUTPUT);
  pinMode(motorIn4, OUTPUT);
  pinMode(motorEnA, OUTPUT);
  pinMode(motorEnB, OUTPUT);


  pinMode(irL, INPUT);
  pinMode(irR, INPUT);

  pinMode(encoderL, INPUT_PULLUP);
  
  attachPCINT(digitalPinToPCINT(encoderL), leftEncoderInterrupt, CHANGE);
 
  if (!mpu.begin()) {
    while (1); // Halt if MPU6050 initialization fails
  }

  mpu.setAccelerometerRange(MPU6050_RANGE_8_G);
  mpu.setGyroRange(MPU6050_RANGE_500_DEG);
  mpu.setFilterBandwidth(MPU6050_BAND_21_HZ);

  previousTime = millis();
}

void turn360() {
   //start turning
    analogWrite(motorEnA, 255);
    analogWrite(motorEnB, 200);
    digitalWrite(motorIn1, LOW);
    digitalWrite(motorIn2, HIGH);
    digitalWrite(motorIn3, HIGH);
    digitalWrite(motorIn4, LOW);
    delay(4500);

   while (angleZ < 360) {
    sensors_event_t a, g, temp;
    mpu.getEvent(&a, &g, &temp);
    unsigned long currentTime = millis();
    float dt = (currentTime - previousTime) / 1000.0;
    previousTime = currentTime;
    angleZ += g.gyro.z * dt * 57.2958; // Convert radians to degrees
    if (angleZ >= 360.0) break;
  }


void loop() {
  int valL = digitalRead(irL);
  int valR = digitalRead(irR);

  if (valL == 1 && valR == 1) {
    analogWrite(motorEnA, 200);
    analogWrite(motorEnB, 120);
    digitalWrite(motorIn1, HIGH);
    digitalWrite(motorIn2, LOW);
    digitalWrite(motorIn3, HIGH);
    digitalWrite(motorIn4, LOW);
  
    if (roll > 1) {
    analogWrite(motorEnA, 180);
    analogWrite(motorEnB, 180);
    digitalWrite(motorIn1, HIGH);
    digitalWrite(motorIn2, LOW);
    digitalWrite(motorIn3, HIGH);
    digitalWrite(motorIn4, LOW);

    if (roll > 22.5 && roll <27.5 && i == 1) {
      analogWrite(motorEnA, 0);
      analogWrite(motorEnB, 0);
      digitalWrite(motorIn1, LOW);
      digitalWrite(motorIn2, LOW);
      digitalWrite(motorIn3, LOW);
      digitalWrite(motorIn4, LOW);
      delay(4000); //stop at ramp
        i = i + 1;
      } 
    }                                                                    
    
    if ((roll > 22.5 && roll <27.5) && i == 2) {
      analogWrite(motorEnA, 0);
      analogWrite(motorEnB, 0);
      digitalWrite(motorIn1, LOW);
      digitalWrite(motorIn2, LOW);
      digitalWrite(motorIn3, LOW);
      digitalWrite(motorIn4, LOW);
      delay(4000); //stop at ramp
      i = i + 1;
    }
    if (i==3) {
    analogWrite(motorEnA, 255);
    analogWrite(motorEnB, 200);
    digitalWrite(motorIn1, HIGH);
    digitalWrite(motorIn2, LOW);
    digitalWrite(motorIn3, HIGH);
    digitalWrite(motorIn4, LOW);
    delay(920);
      i = i + 1;
    }
    if (i==4 && (roll > -3 && roll < -2)) {
    digitalWrite(motorIn1, LOW);
    digitalWrite(motorIn2, LOW);
    digitalWrite(motorIn3, LOW);
    digitalWrite(motorIn4, LOW);
    delay(4000);
    turn360();
    digitalWrite(motorIn1, LOW);
    digitalWrite(motorIn2, LOW);
    digitalWrite(motorIn3, LOW);
    digitalWrite(motorIn4, LOW);
    delay(2000);
    analogWrite(motorEnA, 75);
    analogWrite(motorEnB, 75);
    digitalWrite(motorIn1, HIGH);
    digitalWrite(motorIn2, LOW);
    digitalWrite(motorIn3, HIGH);
    digitalWrite(motorIn4, LOW);
      i = i + 1;
    }
    if (distance>=28 && distance<=32) {
    digitalWrite(motorIn1, LOW);
    digitalWrite(motorIn2, LOW);
    digitalWrite(motorIn3, LOW);
    digitalWrite(motorIn4, LOW);
      delay(3000);
    }
  }
  else if (valL == 1 && valR == 0) {
      analogWrite(motorEnA, 255);
      analogWrite(motorEnB, 255);
      digitalWrite(motorIn1, HIGH);
      digitalWrite(motorIn2, LOW);
      digitalWrite(motorIn3, LOW);
      digitalWrite(motorIn4, HIGH);
      delay(200);
  } 
  else if (valL == 0 && valR == 1) {
      analogWrite(motorEnA, 255);
      analogWrite(motorEnB, 255);
      digitalWrite(motorIn1, LOW);
      digitalWrite(motorIn2, HIGH);
      digitalWrite(motorIn3, HIGH);
      digitalWrite(motorIn4, LOW);
      delay(200);
  } 
  else {
    if (i == 5 || i == 4) {
      analogWrite(motorEnA, 65);
      analogWrite(motorEnB, 65);
      digitalWrite(motorIn1, HIGH);
      digitalWrite(motorIn2, LOW);
      digitalWrite(motorIn3, HIGH);
      digitalWrite(motorIn4, LOW);
      delay(900);
      digitalWrite(motorIn1, LOW);
      digitalWrite(motorIn2, LOW);
      digitalWrite(motorIn3, LOW);
      digitalWrite(motorIn4, LOW);
      delay(1000);
      i = i+1;
      leftEncoderCount = 0;
    }
      digitalWrite(motorIn1, LOW);
      digitalWrite(motorIn2, LOW);
      digitalWrite(motorIn3, LOW);
      digitalWrite(motorIn4, LOW);
  }

  time = millis()/1000;

  if (i==6) {
    float leftDistance = (leftEncoderCount / (float)pulsesPerRevolution) * wheelCircumference;
    distance = leftDistance ;
    }
    
  sensors_event_t a, g, temp;
  mpu.getEvent(&a, &g, &temp);
  roll = atan2(-a.acceleration.x, sqrt(a.acceleration.y * a.acceleration.y + a.acceleration.z * a.acceleration.z)) * 180 / PI;
  Serial.println(roll);

  lcd.setCursor(0, 0);
  lcd.print("Time: ");
  lcd.print(time, 1); 
  lcd.print(" s");

  if (i<6) {
    lcd.setCursor(0, 1);
    lcd.print("Angle: ");
    lcd.print(roll + 2.7, 1);
    lcd.print(" deg ");
  }

  if (i==6) {
    lcd.setCursor(0, 1);
    lcd.print("Distance: ");
    lcd.print(distance, 1); 
    lcd.print("cm");
  }
}
